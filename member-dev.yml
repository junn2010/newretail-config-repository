server:
  port: 9002

spring:
  #database-db(spring boot default init dataSource)
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.100.100.105:3306/newretaildb?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=round
    username: hno2o
    password: hno2o
    filters: stat
    maxActive: 500
    initialSize: 2
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 1
    testWhileIdle: true
    testOnBorrow: false
    maxOpenPreparedStatements: 4
    removeAbandoned: true
    removeAbandonedTimeout: 1800
    logAbandoned: true
#actuator user
  security:
    user:
      name: admin
      password: admin
      roles: ENDPOINT_ADMIN
#actuator
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: info, health,shutdown
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true

mybatis:
  mapperLocations: classpath*:com/junn/newretail/member/**/mapping/*Mapper.xml
  #plug ComponentScan
  plugComponentScan: com.junn.newretail.member
  configLocation: classpath:mybatis-config.xml

#database-redis
redis:
  db:
    password: hna2017
    mastername: master1
    sentinels: 192.100.100.107:26379
    PoolConfig:
      maxWaitMillis: 1000
      minIdle: 0
      maxIdle: 100
      maxTotal: 1000

feign:
  hystrix:
    enabled: true
#ribbon rule    
newretail-distributeId: 
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule


